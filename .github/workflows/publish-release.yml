name: Release

on:
  workflow_call:
    inputs:
      public_artifactory:
        type: boolean
        default: false
      os:
        required: true
        type: string
        default: ubuntu-22.04
      compiler:
        type: string
        default: clang-14
      cmake-version:
        type: string
        default: 3.21.7
      conan-version:
        type: string
        default: 1.59
    secrets:
      CONAN_USER:
        required: true
      CONAN_PW:
        required: true

jobs:
  publish-release:
    name: Creates a release for the current version defined in CMake and uploads a Conan package to conan.dice-research.org. Fails if release for the version exists already.
    runs-on: ${{ inputs.os }}
    steps:
      # setup env
      - name: Get minimum cmake version
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: ${{ inputs.cmake-version }}
      - name: Install compiler
        id: install_cc
        uses: rlalik/setup-cpp-compiler@v1.2
        with:
          compiler: ${{ inputs.compiler }}
      - uses: rui314/setup-mold@v1
      - name: Install conan
        shell: bash
        env:
          CC: ${{ steps.install_cc.outputs.cc }}
          CXX: ${{ steps.install_cc.outputs.cxx }}
        run: |
          pip3 install "conan==${{ inputs.conan-version }}"
          conan profile new --detect default
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan profile update env.CXXFLAGS="${CXXFLAGS}" default
          conan profile update env.CMAKE_EXE_LINKER_FLAGS="${CMAKE_EXE_LINKER_FLAGS}" default
          conan profile update env.CXX="${CXX}" default
          conan profile update env.CC="${CC}" default
          conan remote add dice-group https://conan.dice-research.org/artifactory/api/conan/tentris
          conan remote add tentris-private https://conan.dice-research.org/artifactory/api/conan/tentris-private
          conan user -p "${{ secrets.CONAN_PW }}" -r dice-group "${{ secrets.CONAN_USER }}"
          conan user -p "${{ secrets.CONAN_PW }}" -r tentris-private "${{ secrets.CONAN_USER }}"

      - name: Cache conan data
        id: cache-conan
        uses: actions/cache@v3
        with:
          path: ~/.conan/data
          key: ${{ env.os }}-${{ env.compiler }}-conan

      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract asset version
        id: extract_asset_version
        shell: bash
        run: |
          echo "asset_version=$(conan inspect . --raw version)" >> $GITHUB_ENV
      - name: Create github release
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ env.asset_version }}"

      - name: Set package name identifier
        shell: bash
        run: |
          echo "conan_package_identifier=$(conan inspect . --raw name)/$(conan inspect . --raw version)@" >> $GITHUB_ENV

      - name: Create Package
        shell: bash
        env:
          CC: ${{ steps.install_cc.outputs.cc }}
          CXX: ${{ steps.install_cc.outputs.cxx }}
        run: |
          (conan remove -f "${{ env.conan_package_identifier }}" || true)
          conan create . "${{ env.conan_package_identifier }}" --build missing -pr:b=default -pr:h=default

      - name: Select public artifactory for upload
        if: ${{ fromJSON(inputs.public_artifactory) }}
        run: |
          echo "remote_artifactory_name=dice-group" >> $GITHUB_ENV

      - name: Select private artifactory for upload
        if: ${{ !fromJSON(inputs.public_artifactory) }}
        run: |
          echo "remote_artifactory_name=tentris-private" >> $GITHUB_ENV

      - name: Upload to artifactory
        shell: bash
        run: |
          conan upload "${{ env.conan_package_identifier }}" -r ${{ env.remote_artifactory_name }}
